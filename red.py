import os
import time
import atexit
import praw
import cPickle
from pytldr.summarize.textrank import TextRankSummarizer
from praw.errors import RateLimitExceeded, APIException
from requests import HTTPError
from requests.exceptions import ReadTimeout
 
 
USER_AGENT = "Bitesize News Summaries 0.1"
REDDIT_USER = "BitesizeNewsBot"
REDDIT_PASSWORD = "XXXXXXXXXXXX"
MESSAGE_TEMPLATE = """Summary of {0} :
 
{1}
 
- generated by BitesizeNewsBot.
"""
 
 
# Store seen posts in a set.
# Try to load the set when the program starts.
SEEN_POSTS = set()
 
if os.path.exists("seen.pkl"):
    with open("seen.pkl", "rb") as data_file:
        SEEN_POSTS = cPickle.load(data_file)
 
 
@atexit.register
def save_seen_posts():
    with open("seen.pkl", "wb") as f:
        cPickle.dump(SEEN_POSTS, f)
 
 
def summarize_web_page(url):
    summarizer = TextRankSummarizer()
    return '\n\n'.join(summarizer.summarize(url, length=3))
 
 
def main():
    global SEEN_POSTS
 
    reddit = praw.Reddit(user_agent=USER_AGENT)
    reddit.login(REDDIT_USER, REDDIT_PASSWORD)
 
    while True:
        submissions = reddit.get_subreddit("worldnews").get_new(limit=10)
        for submission in submissions:
            if submission.is_self or submission.id in SEEN_POSTS:
                continue
 
            summary = summarize_web_page(submission.url)
 
            # Sometimes pytldr returns summaries with no text. No point posting them.
            if len(summary) == 0:
                continue
 
            message_text = MESSAGE_TEMPLATE.format(submission.url, summary)
 
            try:
                submission.add_comment(message_text)
 
                # Add the post ID to the set of seen posts.
                SEEN_POSTS.add(submission.id)
                print "Posted summary for {0}".format(submission.url)
 
            except (RateLimitExceeded, APIException, HTTPError, ReadTimeout), ex:
                print ex
 
            time.sleep(600)
 
 
if __name__ == "__main__":
    main()